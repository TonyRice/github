commands:
  api:
    help: Make an API request to the GitHub REST API
    arguments:
      method:
        required: true
        type: string
        enum:
          - head
          - get
          - post
          - patch
          - put
          - delete
      url:
        required: true
        type: string
      data:
        type: map
        help: The data to post in the API request body.
      params:
        type: map
    output:
      type: map

  graphql:
    help: Query GitHub GraphQL
    arguments:
      query:
        type: string
        required: true
    output:
      type: map

  webhooks:
    help: Accept GitHub webhooks as events
    events:
      push: &event
        help: Any Git push to a Repository, including editing tags or branches. Commits via API actions that update references are also counted. This is the default event.
        output:
          type: map
      repository:
        help: Any time a Repository is created, deleted (organization hooks only), archived, unarchived, made public, or made private.
        <<: *event
      # TODO add more events here ...
    run:
      command: ["FLASK_APP=server.py", "flask", "run"]
      port: 5000

environment:
  # TODO github apps
  OAUTH_TOKEN:
    help: A user oauth token.
    type: string
  WEBHOOK_SECRET:
    help: Used to check the webhook payload signature.
    type: string
  USER_AGENT:
    help: GitHub requires a the User-Agent header defined.
    type: string
    default: 'Not Defined'
