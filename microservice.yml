omg: 1
lifecycle:
  startup:
    command: ["python", "/app/app.py"]
actions:
  api:
    help: Make an API request to the GitHub REST API
    arguments:
      method:
        required: true
        type: string
        in: requestBody
        default: get
        enum:
          - head
          - get
          - post
          - patch
          - put
          - delete
      url:
        required: true
        type: string
        in: requestBody
      data:
        type: map
        in: requestBody
        help: The data to post in the API request body.
      params:
        type: map
        in: requestBody
      headers:
        type: map
        in: requestBody
      token:
        type: string
        help: A oauth user access token to use during the request for authentication.
        in: requestBody
    output:
      type: map
    http:
      contentType: application/json
      port: 8000
      method: post
      path: /api

  graphql:
    help: Query GitHub GraphQL
    arguments:
      query:
        type: string
        in: requestBody
        required: true
      headers:
        type: map
        in: requestBody
      token:
        type: string
        help: A oauth user access token to use during the request for authentication.
        in: requestBody
    output:
      type: map
    http:
      contentType: application/json
      port: 8000
      method: post
      path: /graphql

  login_redirect:
    help: |
      Return the GitHub redirect url for login
    arguments:
      scope:
        type: list
        in: requestBody
        help: List of scopes to use during login
      redirect:
        type: string
        in: requestBody
        help: Where GitHub redirects successful logins to
    http:
      port: 8000
      method: post
      path: /login_redirect
      contentType: application/json

  login_token:
    help: Return the GitHub redirect url for login
    arguments:
      code:
        type: string
        in: requestBody
        help: The code provided in the query of GitHub oauth call
      state:
        type: string
        in: requestBody
        help: A unique key for state tracking
    http:
      port: 8000
      method: post
      path: /login_token
      contentType: application/json

  validate:
    help: Validate webhooks signature
    arguments:
      signature:
        type: string
        required: true
        in: requestBody
        help: |
          Found in X-Hub-Signature in the request header
      body:
        type: map
        in: requestBody
        help: |
          The request body from GitHub
    http:
      port: 8000
      method: post
      path: /validate
      contentType: application/json

environment:
  # TODO github apps
  OAUTH_TOKEN:
    help: A user oauth token to be used if not provided during an action.
    type: string
  WEBHOOK_SECRET:
    help: Used to check the webhook payload signature.
    type: string
  USER_AGENT:
    help: GitHub requires a the User-Agent header defined.
    type: string
    default: 'Not Defined'
