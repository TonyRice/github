commands:
  api:
    help: Make an API request to the GitHub REST API
    arguments:
      method:
        required: true
        type: string
        enum:
          - head
          - get
          - post
          - patch
          - put
          - delete
      url:
        required: true
        type: string
      data:
        type: map
        help: The data to post in the API request body.
      params:
        type: map
    output:
      type: map

  graphql:
    help: Query GitHub GraphQL
    arguments:
      query:
        type: string
        required: true
    output:
      type: map

  webhooks:
    help: Accept GitHub webhooks as events
    events:
      push: &event
        help: Any Git push to a Repository, including editing tags or branches. Commits via API actions that update references are also counted. This is the default event.
        output:
          type: map
      repository:
        help: Any time a Repository is created, deleted (organization hooks only), archived, unarchived, made public, or made private.
        <<: *event
      # TODO add more events here ...
    run:
      command: ["FLASK_APP=server.py", "flask", "run"]
      port: 5000

  oauth:
    help: GitHub Oauth login server
    events:
      login:
        help: Published after a user logs in via GitHub Oauth
        arguments:
          redirect:
            required: true
            type: str
            help: Url to redirect user after login
          scope:
            type: list
            help: |
              One or more login scopes
              https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps
            default:
              - read:user
        output:
          type: object
          attributes:
            access_token:
              type: string
              help: The logged in users oauth token. Must be kept secret and should be encripted.
            token_type:
              type: string
              help: The token type. E.g., "bearer"
            scope:
              type: list
              help: The resulting scope during login
            state:
              type: str
              help: |
                The string used for the login state.
    run:
      command: ["FLASK_APP=login.py", "flask", "run"]
      port: 5000

environment:
  HOSTNAME:
    type: string
    help: For GitHub Enterprise. The DNS of where GitHub is nosted. E.g. "git.company.com"
    default: github.com
  CLIENT_ID:
    type: string
    help: The client ID you received from GitHub. https://github.com/settings/applications/new
  CLIENT_SECRET:
    type: string
    help: The client secret you received from GitHub for your GitHub App.
  WEBHOOK_SECRET:
    help: Used to check the webhook payload signature.
    type: string
  USER_AGENT:
    help: GitHub requires a the User-Agent header defined.
    type: string
    default: 'Not Defined'
